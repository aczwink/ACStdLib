/*
 * Copyright (c) 2017-2018 Amir Czwink (amir130@hotmail.de)
 *
 * This file is part of Std++.
 *
 * Std++ is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Std++ is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Std++.  If not, see <http://www.gnu.org/licenses/>.
 */
#include <Std++Test.hpp>
using namespace StdXX;

#include <cstdio>
#include <clocale>

static void test(const char* numberString)
{
	double stdpp = String(numberString).ToFloat();
	double std = strtod(numberString, nullptr);

	if(stdpp != std)
	{
		printf("DIFFERENCE!\n");
		printf("%a %.64g\n", std, std);
		printf("%a %.64g\n", stdpp, stdpp);
		ASSERT(false, u8"Floats are not equal");
	}
}

TEST_SUITE(FloatToStringTest)
{
    TEST_CASE(std_tests) //tests against standard strtod function
	{
		setlocale(LC_NUMERIC, "C");

		test(u8"3.42708e-05");
		test(u8"0.9999999999");
		test(u8"0.9999999999999999999999999999999999");
		test(u8"1.789e6");
		test(u8"123e-8");
		test(u8"456.833e2");
		test(u8"9007199254740992.4567");
		test(u8"0.000976562500000000325260651745651330202235840260982513427734375");
		test(u8"1234.56789012345678901234567890123456789");
		test(u8"123456789012345.678901234567890123456789");
		test(u8"123456789012345.0034375");
		test(u8"123456789012345.0234375");
		test(u8"12345678901234567.8901234567890123456789");
		test(u8"9007199254740991.05");
		test(u
		test(u
		test(u8"0.500000000000000166533453693773481063544750213623046875");
		test(u8"3.518437208883201171875e13");
		test(u8"62.5364939768271845828");
		test(u8"8.10109172351e-10");
		test(u8"1.50000000000000011102230246251565404236316680908203125");
		test(u8"9007199254740991.4999999999999999999999999999999995");
		test(u8"9214843084008499");
		test(u8"30078505129381147446200");
		test(u8"0.3932922657273");
	}
};